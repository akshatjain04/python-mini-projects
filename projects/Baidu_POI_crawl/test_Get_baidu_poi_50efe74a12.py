# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import pytest
import requests
import json
from unittest.mock import Mock, patch, mock_open
from util import get_baidu_poi

@patch("requests.get")
@patch("time.sleep")  # we don't want to delay our tests
@patch("time.strftime")
@patch("builtins.open", new_callable=mock_open)
def test_Get_baidu_poi_50efe74a12(mock_open, mock_strftime, mock_sleep, mock_get):
    # Setup
    now_time = "2022-01-01"
    mock_strftime.return_value = now_time

    # TODO: replace with actual values
    roi_key = "sample_roi_key"
    city_str = "sample_city_str"
    baidu_ak = "sample_baidu_ak"
    output = "sample_output_path"
    
    # Mock requests.get response
    mock_response = Mock()
    mock_result = {
        "results": [
            {
                "name": "sample_name",
                "location": {"lat": 20, "lng": 30},
                "area": "sample_area",
                "address": "sample_address"
            }
        ]
    }
    mock_response.text = json.dumps(mock_result)
    mock_get.return_value = mock_response

    # Action
    get_baidu_poi(roi_key, city_str, baidu_ak, output)

    # Assert
    mock_get.assert_called()
    assert mock_open.call_count == 2
    write_calls = [call[0][0] for call in mock_open().write.mock_calls]
    assert f"{now_time}.log" in write_calls
    assert f"{now_time}.txt" in write_calls
