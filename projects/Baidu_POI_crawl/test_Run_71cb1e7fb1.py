# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import os
import os.path as osp
import unittest
from unittest.mock import patch, MagicMock
import argparse
# import the run method from its original file
from main import run

class RunTest(unittest.TestCase):
    def setUp(self):
        self.parser = argparse.ArgumentParser(description="input parameters")
        self.parser.add_argument("--ak", type=str, required=True, help="Baidu web ak")
        self.parser.add_argument("--city", type=str, required=True, help="City name")
        self.parser.add_argument("--poi", type=str, required=True, help="POI key")
        self.parser.add_argument("--save", type=str, default="output", help="Save path")

    @patch('os.makedirs')
    @patch('osp.exists')
    @patch('util.get_baidu_poi')
    def test_Run_71cb1e7fb1(self, mock_get_baidu_poi, mock_osp_exists, mock_os_makedirs):
        mock_osp_exists.return_value = False
        args = self.parser.parse_args(['--ak', 'test_ak', '--city', 'test_city', '--poi', 'test_poi', '--save', 'test_dir'])
        run(args)
        mock_os_makedirs.assert_called_once_with('test_dir')
        mock_get_baidu_poi.assert_called_once_with('test_poi', 'test_city', 'test_ak', 'test_dir')

    @patch('os.makedirs')
    @patch('osp.exists')
    @patch('util.get_baidu_poi')
    def test_Run_71cb1e7fb1_dir_exists(self, mock_get_baidu_poi, mock_osp_exists, mock_os_makedirs):
        mock_osp_exists.return_value = True
        args = self.parser.parse_args(['--ak', 'test_ak', '--city', 'test_city', '--poi', 'test_poi', '--save', 'test_dir'])
        run(args)
        mock_os_makedirs.assert_not_called()
        mock_get_baidu_poi.assert_called_once_with('test_poi', 'test_city', 'test_ak', 'test_dir')

if __name__ == "__main__":
    unittest.main()
