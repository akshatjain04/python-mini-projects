# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import os.path as osp
import pytest
from argparse import Namespace
from unittest.mock import patch
from main import run

def test_Run_71cb1e7fb1_success():
    args = Namespace(ak="test_ak", city="test_city", poi="test_poi", save="test_path")

    with patch('os.makedirs') as mocked_makedirs, patch('main.get_baidu_poi') as mocked_get_baidu_poi:
        run(args)

    # Assert if the directory is successfully created
    mocked_makedirs.assert_called_once_with("test_path")

    # Assert if get_baidu_poi is properly called
    mocked_get_baidu_poi.assert_called_once_with("test_poi", "test_city", "test_ak", "test_path")

    
def test_Run_71cb1e7fb1_failure():
    args = Namespace(ak="test_ak", city="test_city", poi="test_poi", save="")
    
    with pytest.raises(Exception):
        run(args)
   
def test_Run_71cb1e7fb1_failure_no_poi_key():
    args = Namespace(ak="test_ak", city="test_city", poi="", save="test_path")
    
    with pytest.raises(Exception):
        run(args)

if __name__ == '__main__':
    pytest.main()
