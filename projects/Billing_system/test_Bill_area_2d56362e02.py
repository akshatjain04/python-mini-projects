# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
from unittest.mock import Mock, patch
from tkinter import messagebox
from billing_system import bill_area

class TestBillArea(unittest.TestCase):
    
    # we'll be some setup before testing
    def setUp(self):
        self.billing_area_test = bill_area()

    # test case when customer name and phone is missing
    @patch("suit-testing.billing_system.messagebox")
    def test_Bill_area_2d56362e02_first_condition(self, mock_msgbox):
        self.billing_area_test.c_name.get.return_value = " "
        self.billing_area_test.c_phone.get.return_value = " "
        self.billing_area_test.bill_area()
        mock_msgbox.showerror.assert_called_with("Error", "Customer Details Are Must")

    # test case when no products were purchased
    @patch("suit-testing.billing_system.messagebox")
    def test_Bill_area_2d56362e02_second_condition(self, mock_msgbox):
        self.billing_area_test.c_name.get.return_value = "name"
        self.billing_area_test.c_phone.get.return_value = "0123456789"
        self.billing_area_test.medical_price.get.return_value = "Rs. 0.0"
        self.billing_area_test.grocery_price.get.return_value = "Rs. 0.0"
        self.billing_area_test.cold_drinks_price.get.return_value = "Rs. 0.0"
        self.billing_area_test.bill_area()
        mock_msgbox.showerror.assert_called_with("Error", "No Product Purchased")

if __name__ == "__main__":
    unittest.main()
