# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import pytest
import random
from tkinter import Label, LabelFrame, Frame, Entry
from tkinter import IntVar, StringVar, Button, Text
from billing_system import __init__

# Test SetUp to initialize the values
def setup_module(module):
    global root
    root = Tk()
    global obj
    obj = __init__(root)

# Writing TestCase for __init__ method
def test___init___c8357d7fa4():
    
    # Asserting if object belongs to __init__ method
    assert isinstance(obj, __init__)
    
    # Asserting if GUI root is not Null
    assert obj.root is not None
    
    # Asserting some of the GUI properties
    assert obj.bg_color == "#badc57"
    assert isinstance(obj.title, Label)
    
    # Asserting the IntVar variables are initialized
    assert obj.sanitizer.get() == 0
    assert obj.mask.get() == 0
    assert obj.hand_gloves.get() == 0
    assert obj.dettol.get() == 0
    assert obj.newsprin.get() == 0
    assert obj.thermal_gun.get() == 0
    
    # Asserting the GUI widgets created are of right types
    assert isinstance(obj.F1, LabelFrame)
    assert isinstance(obj.cname_lbl, Label)
    assert isinstance(obj.cname_txt, Entry)
    
    # Asserting the default values of customer details in GUI are correct
    assert obj.c_name.get() == ""
    assert obj.c_phone.get() == ""
    assert len(obj.bill_no.get()) == 4 # bill number is randomly generated, so we can only assert its length
    

# TearDown method to destroy all created objects at end of all tests
def teardown_module(module):
    obj.root.destroy()

# pytest main method to run tests
if __name__ == "__main__":
    pytest.main()
