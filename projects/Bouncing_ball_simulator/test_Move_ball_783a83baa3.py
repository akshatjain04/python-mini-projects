# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

import unittest
import pygame
from pygame.locals import *
from ball_bounce import ball

class MoveBallTestCase(unittest.TestCase):
    """Tests for `move_ball`."""

    def setUp(self):
        """Creates the necessary objects for the test."""
        self.ball = ball()
	
    def test_Move_ball_783a83baa3(self):
        """Tests if ball movement is within window range."""

        self.ball.move_ball()
        self.assertTrue(0 <= self.ball.X <= 768, msg="Ball X position is out of range!")
        self.assertTrue(0 <= self.ball.Y <= 568, msg="Ball Y position is out of range!")

        # Mock ball hitting right boundary of window
        self.ball.X = 768
        self.ball.velocityX = 10
        self.ball.move_ball()
        self.assertTrue(self.ball.velocityX < 0,
                        msg="Ball failed to bounce back on hitting right boundary!")

        # Mock ball hitting left boundary of window
        self.ball.X = 0
        self.ball.velocityX = -10
        self.ball.move_ball()
        self.assertTrue(self.ball.velocityX > 0,
                        msg="Ball failed to bounce back on hitting left boundary!")

        # Mock ball hitting top boundary of window
        self.ball.Y = 0
        self.ball.velocityY = -10
        self.ball.move_ball()
        self.assertTrue(self.ball.velocityY > 0,
                        msg="Ball failed to bounce back on hitting top boundary!")

        # Mock ball hitting bottom boundary of window
        self.ball.Y = 568
        self.ball.velocityY = 10
        self.ball.move_ball()
        self.assertTrue(self.ball.velocityY < 0,
                        msg="Ball failed to bounce back on hitting bottom boundary!")

if __name__ == '__main__':
    unittest.main()
