# Test generated by RoostGPT for test MiniProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

from datetime import date
from birthDateToCurrentAge import ageCalculator
import unittest

class TestMethods(unittest.TestCase):

    # Test if the date is in the future
    def test_AgeCalculator_0d3d2327e9(self):
        today = date.today()
        birth_date_in_the_future = (today.year + 5, today.month, today.day)
        with self.assertRaises(ValueError):
            ageCalculator(*birth_date_in_the_future)

    # Test if the date have values more than expected: more than 12 months or more than 31 days
    def test_AgeCalculator_month_day_limit(self):
        with self.assertRaises(ValueError):
            ageCalculator(2000, 13, 5)
            ageCalculator(2000, 5, 32)

    # Test for correct age calculation
    def test_AgeCalculator_correct_age(self):
        # TODO: provide a valid date of birth
        birth_year = 1995
        birth_month = 5
        birth_day = 27
        age = ageCalculator(birth_year, birth_month, birth_day)
        today = date.today()
        expected_age_years = today.year - birth_year
        expected_age_months = today.month - birth_month
        expected_age_days = today.day - birth_day
        expected_age = (expected_age_years, expected_age_months, expected_age_days)
        self.assertEqual(age, expected_age)

if __name__ == "__main__":
    unittest.main()
